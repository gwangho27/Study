plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.gh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'
    implementation group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'
    implementation group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    compile group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
    compile group: 'io.lettuce', name: 'lettuce-core', version: '6.0.1.RELEASE'
    compile("com.querydsl:querydsl-core")
    compile("com.querydsl:querydsl-jpa")
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation group: 'com.github.kstyrc', name: 'embedded-redis', version: '0.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

def generated = 'src/main/generated'
sourceSets {
    main {
        java.srcDirs += [generated]
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir();
}
test {
    useJUnitPlatform()
}
